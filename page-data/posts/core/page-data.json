{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/core",
    "result": {"pageContext":{"currentCategory":"core","categories":["All","core","algorithm","etc"],"edges":[{"node":{"id":"2c820914-b6a4-5937-b94b-f0dd72f9827b","excerpt":"개인적으로 실행 컨텍스트를 공부하면서 기존에 모호하게 알고 있던 자바스크립트의 다양한 동작 원리들이 보다 뚜렷해졌다. 실행 컨텍스트에서 나오는 개념들을 파악하고 있다면 호이스팅이 발생하는 이유부터 클로저, 태스크 큐, 비동기 처리까지 전반적인 자바스크립트 코어 동작 원리들을 이해할 수 있다. 1. 실행 컨텍스트란 무엇인가❓ 실행은 알겠는데 컨텍스트는 뭘까? 라는 생각을 할 수 있다. 컨텍스트를 굳이 번역해보자면 문맥 또는 환경으로 읽을 수 있다. 그렇다면 “실행 문맥”으로 번역하면 될까? 실행 컨텍스트의 큰 개념을 파악하는데 나름 괜찮은 번역이라고 생각한다. 우리는 어떤 글을 읽을 때 흔히 ‘문맥’을 파악한다고 하고 이해되지 않거나 현재 내용과 상관없는 내용이 있을 때 ‘문맥’이 맞지 않는다고 말한다. 정확한 비유는 아니지만, 실행 컨텍스트란 자바스크립트 엔진이 ‘문맥’에 맞게 소스 코드를 평가하고 실행할 수 있도록 필요한 정보들을 제공해주는 객체이다. 그렇다면 자바스크립트 엔진이…","fields":{"slug":"/코어-자바스크립트-실행-컨텍스트/"},"frontmatter":{"categories":"core","title":"javascript - 실행 컨텍스트 (feat.호이스팅)","date":"May 09, 2022"}},"next":{"fields":{"slug":"/코어-자바스크립트-데이터-타입-2/"}},"previous":null},{"node":{"id":"f5a48f99-1ec2-5eae-89ad-897316f0de78","excerpt":"🚪 들어가며 이전 데이터 타입 (1)에서 자바스크립트의 기본형 데이터를 정리하면서 정말 많은 aha!를 경험했다. 가장 핵심이되는 개념은 기본형 데이터는 모두 불변값이라는 것이다.  를 반복하는 2개의 반복문이 있다. 첫 번째 for 문에서는 기본형 데이터 타입인 숫자 2를 두 번째 for 문에서는 {} 빈 객체를 출력한다. 언뜻 보면 비슷해 보이는 두 반복문의 다른 점은 무엇일까? 가변값 기본형 데이터의 불변성을 강조하다 보니 참조형 데이터는 모두 가변 값일 것 같은 느낌을 받을 수 있다. 실제 기본적인 성질은 가변 값인 경우가 많지만, 설정에 따라 변경 불가능한 경우도 있고, 아예 불변 값으로 활용하는 경우도 있다. 대표적인 예로 redux의 state 값을 변경할 때 불변성을 유치해주는 경우가 있다. 참조형 데이터의 가변성을 이해하기 위해서 데이터가 할당되는 과정을 살펴보자. 일단 참조형 데이터 타입의 경우에 기본형과 다르게 메모리 힙이라는 별도에 공간에 저장된다. 메모리 힙…","fields":{"slug":"/코어-자바스크립트-데이터-타입-2/"},"frontmatter":{"categories":"core","title":"Javascript - 데이터 타입 (2)","date":"May 02, 2022"}},"next":{"fields":{"slug":"/코어-자바스크립트-데이터-타입/"}},"previous":{"fields":{"slug":"/코어-자바스크립트-실행-컨텍스트/"}}},{"node":{"id":"ee8431ba-c162-5e14-a9e9-7756f14f7413","excerpt":"🚪들어가며 아래 코드의 출력 결과는 무엇일까?  자바스크립트 **primitive type(기본형)**과 reference type(참조형) 데이터 타입의 동작과 원리를 살펴보고 평소에 애매모호하게 알고 있던 개념을 확실히 잡아보자. 자바스크립트 데이터 타입 종류 자바스크립트 데이터 타입은 기본형과 참조형 크게 두가지가 있다. 기본형 참조형 number object string array boolean function null date symbol RegExp Primitive type(기본형) 자바스크립트의 기본형 데이터 타입은 불변성을 뛴다는 것을 어디선가 듣거나 읽었을 것이다. 처음 이 개념을 공부할 때는 “불변”이 아니라 “불편”했다. 여기서 변하지 않는다는 것은 무엇을 의미할까? 아래 코드를 보면 분명 변수에 할당한 값은 이후에 다시 새로운 값으로 변경할 수 있다. 리액트 코어 팀에 Dan abramov의 표현을 빌리자면 자바스크립트의 기본형 데이터 타입은 “하늘에 떠 있…","fields":{"slug":"/코어-자바스크립트-데이터-타입/"},"frontmatter":{"categories":"core","title":"Javascript - 데이터 타입 (1)","date":"May 01, 2022"}},"next":{"fields":{"slug":"/leetcode-46/"}},"previous":{"fields":{"slug":"/코어-자바스크립트-데이터-타입-2/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}