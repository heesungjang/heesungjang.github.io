{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/leetcode-819/",
    "result": {"data":{"cur":{"id":"9c9d5e7a-135d-581e-b38e-dbfa4ba2b797","html":"<p>문제: <a href=\"https://leetcode.com/problems/most-common-word/\">leetcode - 819</a> (Most Common Word\n)</p>\n<p>코로나 격리중..뭐 할까 고민하다 항해에서 보내준 ‘파이썬 알고리즘 인터뷰’ 완독을 목표로 시작한 리트코드 문제풀기, 아직까지는 문제들이 쉬워서 그런지 재밌다 😅.</p>\n<p>이번 문제도 난이도가 높지않지만 파이썬 컴프리헨션과 Counter 클래스를 활용해 볼 수 있는 좋은 문제였다. 알고리즘 준비를 파이썬으로 하겠다고 마음먹고 파이썬 공부를 시작한지 얼마 지나지 않았지만 벌써 푹 빠져버렸다.</p>\n<h4 id=\"문제-해설\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EC%84%A4\" aria-label=\"문제 해설 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해설:</h4>\n<p>Given a string paragraph and a string array of the banned words banned, return the most frequent word that is not banned. It is guaranteed there is at least one word that is not banned, and that the answer is unique.</p>\n<p>The words in paragraph are case-insensitive and the answer should be returned in lowercase.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">most_common_word</span><span class=\"token punctuation\">(</span>paragraph<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> banned<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># replace := 문자열 치환후, 새로운 문자열 반환</span>\n    <span class=\"token comment\"># 정규식을 쓰기 싫어서 아래와 같이 필터링 했다.</span>\n    <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> <span class=\"token string\">\"!?',;.\"</span><span class=\"token punctuation\">:</span> paragraph <span class=\"token operator\">=</span> paragraph<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 리스트 컨프리헨션 정말 좋다.</span>\n    words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>word <span class=\"token keyword\">for</span> word <span class=\"token keyword\">in</span> paragraph<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> word <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> banned<span class=\"token punctuation\">]</span>\n\n\n    counter <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>Counter<span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\"># Counter 클래스의 most_common() 함수는 튜플 리스트를 반환하기 때문에 주의하자.</span>\n    <span class=\"token comment\"># counter.most_common(1) == [(\"most common word\", #count)]</span>\n    <span class=\"token keyword\">return</span> counter<span class=\"token punctuation\">.</span>most_common<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EC%84%A4\">문제 해설:</a></li>\n</ul>\n</div>","excerpt":"문제: leetcode - 819 (Most Common Word\n) 코로나 격리중..뭐 할까 고민하다 항해에서 보내준 ‘파이썬 알고리즘 인터뷰’ 완독을 목표로 시작한 리트코드 문제풀기, 아직까지는 문제들이 쉬워서 그런지 재밌다 😅. 이번 문제도 난이도가 높지않지만 파이썬 컴프리헨션과 Counter 클래스를 활용해 볼 수 있는 좋은 문제였다. 알고리즘 준비를 파이썬으로 하겠다고 마음먹고 파이썬 공부를 시작한지 얼마 지나지 않았지만 벌써 푹 빠져버렸다. 문제 해설: Given a string paragraph and a string array of the banned words banned, return the most frequent word that is not banned. It is guaranteed there is at least one word that is not banned, and that the answer is unique. The words in paragra…","frontmatter":{"date":"April 10, 2022","title":"leetcode(819)- Most Common Word","categories":"algorithm","author":"heesung jang","emoji":"✏️"},"fields":{"slug":"/leetcode-819/"}},"next":{"id":"df4b3ca4-c53a-5a43-bd3d-de3ad2f3106a","html":"<p>문제: <a href=\"https://leetcode.com/problems/valid-palindrome/\">leetcode - 125</a> (Valid Palindrome)</p>\n<p>A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.</p>\n<p>Given a string s, return true if it is a palindrome, or false otherwise.</p>\n<p>입력으로 주어지는 문자열이 팰린드롬인지 확인하고 True 또는 False를 반환하는 문제이다. 여러가지 방식으로 풀이를 작성하고 제출한 결과 투 포인터를 사용한 풀이가 가장 빠르게 나왔다.</p>\n<h4 id=\"1️⃣-문제풀이list\" style=\"position:relative;\"><a href=\"#1%EF%B8%8F%E2%83%A3-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4list\" aria-label=\"1️⃣ 문제풀이list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1️⃣ 문제풀이(list):</h4>\n<p>가장 느림. pop(0)가 O(n)이라 결국 O(n^2)이기 때문에 아래 데크의 popleft()와 성능 차이가 크다.\n<img src=\"https://velog.velcdn.com/images/heesungj7/post/51888ece-005f-407a-b389-2e8466ca4599/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202022-04-09%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%209.57.45.png\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>char<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> char<span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> words<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> words<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></code></pre></div>\n<h4 id=\"2️⃣-문제풀이deque\" style=\"position:relative;\"><a href=\"#2%EF%B8%8F%E2%83%A3-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4deque\" aria-label=\"2️⃣ 문제풀이deque permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2️⃣ 문제풀이(deque):</h4>\n<p><img src=\"https://velog.velcdn.com/images/heesungj7/post/9db67569-5195-4340-b134-92fa9a884cdc/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202022-04-09%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%209.57.17.png\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        strs <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> char<span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                strs<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>strs<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> strs<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> strs<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></code></pre></div>\n<h4 id=\"3️⃣-문제풀이pythonic\" style=\"position:relative;\"><a href=\"#3%EF%B8%8F%E2%83%A3-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4pythonic\" aria-label=\"3️⃣ 문제풀이pythonic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3️⃣ 문제풀이(pythonic):</h4>\n<p><img src=\"blob:https://velog.io/88af9ff2-8b86-430b-804f-6ec5c9c6beee\" alt=\"업로드중..\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">   <span class=\"token keyword\">def</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>char<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> char<span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">if</span> words<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> words<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span>\n</code></pre></div>\n<h4 id=\"4️⃣-문제풀이two-pointer\" style=\"position:relative;\"><a href=\"#4%EF%B8%8F%E2%83%A3-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4two-pointer\" aria-label=\"4️⃣ 문제풀이two pointer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4️⃣ 문제풀이(two-pointer):</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>char<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> char<span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n        left <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        right <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">while</span> left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> words<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> words<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                right <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1%EF%B8%8F%E2%83%A3-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4list\">1️⃣ 문제풀이(list):</a></li>\n<li><a href=\"#2%EF%B8%8F%E2%83%A3-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4deque\">2️⃣ 문제풀이(deque):</a></li>\n<li><a href=\"#3%EF%B8%8F%E2%83%A3-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4pythonic\">3️⃣ 문제풀이(pythonic):</a></li>\n<li><a href=\"#4%EF%B8%8F%E2%83%A3-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4two-pointer\">4️⃣ 문제풀이(two-pointer):</a></li>\n</ul>\n</div>","frontmatter":{"date":"April 09, 2022","title":"leetcode(125)- valid palindrome","categories":"algorithm","author":"heesung jang","emoji":"✏️"},"fields":{"slug":"/leecode-125/"}},"prev":{"id":"816ea2bf-180d-51a9-a63b-41dfbb2ea767","html":"<p>문제: <a href=\"https://leetcode.com/problems/reorder-data-in-log-files/submissions/\">leetcode - 937</a> (Reorder Data in Log Files)</p>\n<p>You are given an array of logs. Each log is a space-delimited string of words, where the first word is the identifier.</p>\n<p>There are two types of logs:</p>\n<ul>\n<li>Letter-logs: All words (except the identifier) consist of lowercase English - - letters.</li>\n<li>Digit-logs: All words (except the identifier) consist of digits.</li>\n</ul>\n<p>Reorder these logs so that:</p>\n<ul>\n<li>The letter-logs come before all digit-logs.</li>\n<li>The letter-logs are sorted lexicographically by their contents. If their contents are the same, then sort them lexicographically by their identifiers.</li>\n<li>The digit-logs maintain their relative ordering.\nReturn the final order of the logs.</li>\n</ul>\n<h4 id=\"문제-해설\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EC%84%A4\" aria-label=\"문제 해설 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해설:</h4>\n<p>배열의 원소들이 로그들을 주어진 조건에 따라 재정렬하는 문제이다.</p>\n<ol>\n<li>로그의 가장 앞 부분은 식별자이다.</li>\n</ol>\n<ul>\n<li>“digi1 8 1 5 1”에서 digi1이 로그의 특성 즉, 8151이 숫자 로그라는것을 알려주는 식별자이다. =</li>\n</ul>\n<ol start=\"2\">\n<li>문자로 구성된 로그가 숫자 로그보다 앞에오게 한다.</li>\n</ol>\n<ul>\n<li>[“let1 art can”. “digi1 8 1 5 1”]이 주어졌을때 —> [“digi1 8 1 5 1”, “let1 art can”]같이 문자 로그가 배열에 앞에 위치하게 재정렬한다.</li>\n</ul>\n<ol start=\"3\">\n<li>식별자는 순서에 영항을 끼치지 않지만, 문자가 동일할 경우에 식별자 순으로 재정렬한다.</li>\n<li>숫자 로그는 특별한 조건없이 입력 순으로 정렬한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">reorder_log_files</span><span class=\"token punctuation\">(</span>logs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 문자 로그와 숫자 로그를 담을 배열을 초기화</span>\n    letters<span class=\"token punctuation\">,</span> digits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n\t<span class=\"token comment\"># 문자 로그와 숫자 로그를 나눈다.</span>\n    <span class=\"token keyword\">for</span> log <span class=\"token keyword\">in</span> logs<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> log<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 숫자 로그 또한 문자열로 저장되어 있기에, isdigit으로 판별후 digits에 추가</span>\n            digits<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 문자 로그를 letters에 추가</span>\n            letters<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\"># 이 시점에는 모든 문자 로그와 숫자 로그가 나누어져 있음.</span>\n\n    <span class=\"token comment\"># 주어진 조건에 맞게 재정렬을 실행</span>\n    <span class=\"token comment\"># 1. 로그의 컨텐츠로 먼저 정렬을 하고</span>\n    <span class=\"token comment\"># 2. 같은 로그가 있다면 식별자로 한번 더 정렬한다.</span>\n\n    letters<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 이 시점에는 모든 문자 로그들이 조건에 맞게 정렬되어 있음.</span>\n    <span class=\"token comment\"># 문자 로그가 먼저 위치하기 때문에 letters에 digits를 확장해준다.=</span>\n    letters<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> letters</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EC%84%A4\">문제 해설:</a></li>\n</ul>\n</div>","frontmatter":{"date":"April 10, 2022","title":"leetcode(937)- Reorder Data in Log Files","categories":"algorithm","author":"heesung jang","emoji":"✏️"},"fields":{"slug":"/leetcode-937/"}},"site":{"siteMetadata":{"siteUrl":"https://heesungjang.github.io","comments":{"utterances":{"repo":"heesungjang/heesungjang.github.io"}}}}},"pageContext":{"slug":"/leetcode-819/","nextSlug":"/leecode-125/","prevSlug":"/leetcode-937/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}