{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/leetcode-200/",
    "result": {"data":{"cur":{"id":"2b9832da-cb9c-5a82-a5a2-934fa732b495","html":"<p>문제: <a href=\"https://leetcode.com/problems/number-of-islands/submissions/\">leetcode - 200</a> (Number of Islands)</p>\n<p>Given an m x n 2D binary grid grid which represents a map of ‘1’s (land) and ‘0’s (water), return the number of islands.</p>\n<p>An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n<p>섬의 개수 문제는 DFS 알고리즘의 기본 문제이다. 2x2 형태의 배열 맵이 주어진다. 시작점(루트노트)가 없고 (y,x) 위치에 한 노드는 “1”(섬) 또는 “0” 바다를 나타낸다.</p>\n<h3 id=\"1️⃣-문제풀이\" style=\"position:relative;\"><a href=\"#1%EF%B8%8F%E2%83%A3-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4\" aria-label=\"1️⃣ 문제풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1️⃣ 문제풀이:</h3>\n<ol>\n<li>특정 노드에 방문했을 때 해당 노드가 ‘1’이면 방문처리(visited)를 한다.</li>\n<li>해당 노드의 상, 하, 좌, 우를 근접 노드의 값이 “1”라면 재귀적으로 dfs 탐색을 한다.</li>\n<li>한번의 dfs 재귀 사이클이 끝나면 해당 노드와 근접 노드들이 모두 “0” 값으로 변경되고 count 값을 1 올려준다.\n(count = dfs cycle = 섬의 수)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">numIslands</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># count for dfs = island</span>\n        count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n        <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> grid<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>dfs<span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n                    count <span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">return</span> count\n\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \t<span class=\"token comment\"># 상하좌우 이동</span>\n        dy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        dx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">if</span> r <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> c <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> r <span class=\"token operator\">>=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> c <span class=\"token operator\">>=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> grid<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span>\n\n        grid<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span>\n\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>dfs<span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">,</span> r <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1%EF%B8%8F%E2%83%A3-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4\">1️⃣ 문제풀이:</a></li>\n</ul>\n</div>","excerpt":"문제: leetcode - 200 (Number of Islands) Given an m x n 2D binary grid grid which represents a map of ‘1’s (land) and ‘0’s (water), return the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water. 섬의 개수 문제는 DFS 알고리즘의 기본 문제이다. 2x2 형태의 배열 맵이 주어진다. 시작점(루트노트)가 없고 (y,x) 위치에 한 노드는 “1”(섬) 또는 “0” 바다를 나타낸다. 1️⃣ 문제풀이: 특정 노드에 방문했을 때 해당 노드가 ‘1’이면 방문처리(visited)를 한다. 해당 노드의 …","frontmatter":{"date":"March 31, 2022","title":"leetcode(200)- Number of Islands","categories":"algorithm","author":"heesung jang","emoji":"✏️"},"fields":{"slug":"/leetcode-200/"}},"next":{"id":"823bbca0-c455-557c-9c96-9b264a2c5b92","html":"<h3 id=\"-how-to-handle-inputs\" style=\"position:relative;\"><a href=\"#-how-to-handle-inputs\" aria-label=\" how to handle inputs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👉 How to handle inputs</h3>\n<p>코딩 테스트 문제를 풀다보면 다양한 형태로 입력 값이 주어진다.</p>\n<p>별거 아닌거 같지만 헷갈릴 때가 있다. 파이썬에서 입력 값을 다루는 방법을 하나 둘 모아보자.</p>\n<h4 id=\"1️⃣-한-줄에-공백으로-구분된-두-정수-또는-n개의-정수가-입력될-때\" style=\"position:relative;\"><a href=\"#1%EF%B8%8F%E2%83%A3-%ED%95%9C-%EC%A4%84%EC%97%90-%EA%B3%B5%EB%B0%B1%EC%9C%BC%EB%A1%9C-%EA%B5%AC%EB%B6%84%EB%90%9C-%EB%91%90-%EC%A0%95%EC%88%98-%EB%98%90%EB%8A%94-n%EA%B0%9C%EC%9D%98-%EC%A0%95%EC%88%98%EA%B0%80-%EC%9E%85%EB%A0%A5%EB%90%A0-%EB%95%8C\" aria-label=\"1️⃣ 한 줄에 공백으로 구분된 두 정수 또는 n개의 정수가 입력될 때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1️⃣ 한 줄에 공백으로 구분된 두 정수 또는 n개의 정수가 입력될 때.</h4>\n<blockquote>\n<p>input: 3 8</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-how-to-handle-inputs\">👉 How to handle inputs</a></p>\n<ul>\n<li><a href=\"#1%EF%B8%8F%E2%83%A3-%ED%95%9C-%EC%A4%84%EC%97%90-%EA%B3%B5%EB%B0%B1%EC%9C%BC%EB%A1%9C-%EA%B5%AC%EB%B6%84%EB%90%9C-%EB%91%90-%EC%A0%95%EC%88%98-%EB%98%90%EB%8A%94-n%EA%B0%9C%EC%9D%98-%EC%A0%95%EC%88%98%EA%B0%80-%EC%9E%85%EB%A0%A5%EB%90%A0-%EB%95%8C\">1️⃣ 한 줄에 공백으로 구분된 두 정수 또는 n개의 정수가 입력될 때.</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 31, 2022","title":"파이썬 입력 받기 tips","categories":"etc","author":"heesung jang","emoji":"✏️"},"fields":{"slug":"/algo-input/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://heesungjang.github.io","comments":{"utterances":{"repo":"heesungjang/heesungjang.github.io"}}}}},"pageContext":{"slug":"/leetcode-200/","nextSlug":"/algo-input/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}