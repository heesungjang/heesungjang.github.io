{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/leetcode-200/",
    "result": {"data":{"cur":{"id":"2b9832da-cb9c-5a82-a5a2-934fa732b495","html":"<p>문제:<a href=\"https://leetcode.com/problems/number-of-islands/\">leetcode-200</a>(Number of Islands)</p>\n<p>Given an m x n 2D binary grid grid which represents a map of ‘1’s (land) and ‘0’s (water), return the number of islands.</p>\n<p>An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Input<span class=\"token punctuation\">:</span> grid <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">>></span> Output<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></code></pre></div>\n<p>1을 섬으로, 0을 물로 가정한 2D 그리드 맵이 주어졌을 때, 섬의 개수를 계산하는 문제이다. 1로 표시된 섬은 서로 <strong>인접 노드로 연결되어 있다면 하나의 섬으로 처리</strong>해야 한다.</p>\n<h3 id=\"풀이-접근\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4-%EC%A0%91%EA%B7%BC\" aria-label=\"풀이 접근 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👉풀이 접근:</h3>\n<ol>\n<li>행열 2D 그리드에서 섬은 “1”로 표기되어 있다. 행열을 순회하면서 방문한 위치의 표기가 “1”이라면 섬의 개수를 1 증가하면 그리드에 모든 섬의 개수를 쉽게 구할 수 있다.</li>\n<li>❗️ 단, 1들이 하나의 덩어리로 즉, 여러개의 섬들이 연결되어 있다면 하나의 섬으로 처리해야 한다.\n<ul>\n<li>입력값이 정확히 그래프는 아니지만 아래 그림과 같이 행열에서 동서남북으로 연결된 섬들을 그래프로 가정하고 dfs 탐색을 하면 연결된 모든 섬을 방문할 수 있다.</li>\n<li>이때 방문한 섬들을 “0”으로 처리하고 dfs 탐색이 끝났을 때 섬의 개수를 1 증가해주면 하나의 덩어리로 존재하는 섬을 처리할 수 있다.</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"https://velog.velcdn.com/images/heesungj7/post/bf0b6b9f-4215-4c72-ac3d-576120933335/image.png\" alt=\"\"></p>\n<p>풀이 접근 방법만 잘 정리하면 구현 자체는 어렵지 않은 문제이다. dfs 탐색은 stack 또는 재귀 콜스택으로 처리가 가능하다.</p>\n<h3 id=\"stack-풀이\" style=\"position:relative;\"><a href=\"#stack-%ED%92%80%EC%9D%B4\" aria-label=\"stack 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>stack 풀이:</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">num_island</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># dfs 탐색에서 상하좌우 이동 할 자표 필요함</span>\n    dx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 섬의 개수 카운트</span>\n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token comment\"># rows, columns로 행열 만들고 반복문으로 순회</span>\n    rows<span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> column <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token comment\"># 방문한 노드가 섬이 아니라면 스킵</span>\n            <span class=\"token keyword\">if</span> grid<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n\n            <span class=\"token comment\"># 섬의 방문하면 섬 카운트 1 증가</span>\n            count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token comment\"># 스택에 넣고 dfs 탐색 시작</span>\n            stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n            <span class=\"token keyword\">while</span> stack<span class=\"token punctuation\">:</span>\n                x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\"># 방문 처리</span>\n                grid<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span>\n\n                <span class=\"token comment\"># 상하좌우 노드 dfs 탐색</span>\n                <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n                    ny <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n                    <span class=\"token keyword\">if</span> nx <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> nx <span class=\"token operator\">>=</span> rows <span class=\"token keyword\">or</span> ny <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> ny <span class=\"token operator\">>=</span> columns <span class=\"token keyword\">or</span> grid<span class=\"token punctuation\">[</span>nx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ny<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">continue</span>\n\n                    stack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>nx<span class=\"token punctuation\">,</span> ny<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> count</code></pre></div>\n<h3 id=\"재귀-푼제풀이\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EA%B7%80-%ED%91%BC%EC%A0%9C%ED%92%80%EC%9D%B4\" aria-label=\"재귀 푼제풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재귀 푼제풀이:</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">num_island</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># self. 없이 grid 접근하기 위해서 메인 함수내에 중첩 함수로 dfs 정의</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 재귀 종료 조건</span>\n        <span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> x <span class=\"token operator\">>=</span> rows <span class=\"token keyword\">or</span> y <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> y <span class=\"token operator\">>=</span> columns <span class=\"token keyword\">or</span> grid<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span>\n\n        <span class=\"token comment\"># 방문 처리</span>\n        grid<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span>\n\n        <span class=\"token comment\"># 동 서 남 북 탐색</span>\n        dfs<span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n        dfs<span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n        dfs<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        dfs<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 섬의 갯수</span>\n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token comment\"># 행열 생성</span>\n    rows<span class=\"token punctuation\">,</span> columns <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> column <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 방문한 노드가 섬이 아니면 다음 노드로 이동</span>\n            <span class=\"token keyword\">if</span> grid<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>column<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n\n            <span class=\"token comment\"># 방문한 노드가 섬이면 dfs 탐색 시작</span>\n            dfs<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># dfs 탐색이 끝나면 섬 카운트 1 증가</span>\n            count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> count</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%92%80%EC%9D%B4-%EC%A0%91%EA%B7%BC\">👉풀이 접근:</a></li>\n<li><a href=\"#stack-%ED%92%80%EC%9D%B4\">stack 풀이:</a></li>\n<li><a href=\"#%EC%9E%AC%EA%B7%80-%ED%91%BC%EC%A0%9C%ED%92%80%EC%9D%B4\">재귀 푼제풀이:</a></li>\n</ul>\n</div>","excerpt":"문제:leetcode-200(Number of Islands) Given an m x n 2D binary grid grid which represents a map of ‘1’s (land) and ‘0’s (water), return the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water. 1을 섬으로, 0을 물로 가정한 2D 그리드 맵이 주어졌을 때, 섬의 개수를 계산하는 문제이다. 1로 표시된 섬은 서로 인접 노드로 연결되어 있다면 하나의 섬으로 처리해야 한다. 👉풀이 접근: 행열 2D 그리드에서 섬은 “1”로 표기되어 있다. 행열을 순회하면서 방문한 위치의 표기가 “1”이라면 섬의…","frontmatter":{"date":"April 22, 2022","title":"leetcode(200)- Number of Islands","categories":"algorithm","author":"heesung jang","emoji":"✏️"},"fields":{"slug":"/leetcode-200/"}},"next":{"id":"5f63c36b-7378-5958-9ccb-cbf8312f08c7","html":"<p>문제: <a href=\"%22https://leetcode.com/problems/daily-temperatures/%22\">leetcode-739</a>(Daily temperatures)</p>\n<p>Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Input<span class=\"token punctuation\">:</span> temperatures <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token number\">74</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">71</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">>></span>Output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>매일의 온도를 리스트 T로 입력받은 뒤 현재보다 더 따뜻한 날이 올 때까지 며칠이 걸리는지를 구하는 문제다.</p>\n<ol>\n<li>\n<p>enumerate를 이용해서 특정 날짜의 인덱스와 온도값을 기억한다</p>\n</li>\n<li>\n<p>T의 인덱스를 계속해서 스택에 쌓아두면서</p>\n<ol>\n<li>\n<p>현재 온도가 스택에 쌓아둔 마지막 날의 온도보다 높다면</p>\n</li>\n<li>\n<p>스택을 pop해주고</p>\n</li>\n<li>\n<p>정답에 i와 pop한 인덱스와의 차이를 저장한다</p>\n</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://velog.velcdn.com/images/heesungj7/post/835229d3-cca8-4ed2-adea-f02e1ab27fb1/image.jpeg\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">daily_temp</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    res<span class=\"token punctuation\">,</span> stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> curr <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token keyword\">while</span> stack <span class=\"token keyword\">and</span> curr <span class=\"token operator\">></span> T<span class=\"token punctuation\">[</span>stack<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            last <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            res<span class=\"token punctuation\">[</span>last<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> last\n        stack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> res</code></pre></div>","frontmatter":{"date":"April 19, 2022","title":"leetcode(739)- Daily temperatures","categories":"algorithm","author":"heesung jang","emoji":"✏️"},"fields":{"slug":"/leetcode-739/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://heesungjang.github.io","comments":{"utterances":{"repo":"heesungjang/heesungjang.github.io"}}}}},"pageContext":{"slug":"/leetcode-200/","nextSlug":"/leetcode-739/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}